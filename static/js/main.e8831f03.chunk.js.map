{"version":3,"sources":["components/Button.js","components/Joke.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","onSubmit","getRandomChuckJoke","name","selected","value","Joke","joke","error","initialState","undefined","App","e","a","preventDefault","category","target","elements","fetch","api_call","json","data","setState","state","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","alt","src","document","getElementById"],"mappings":"iQA+BeA,EA3BA,SAAAC,GAAK,OAChB,qBAAKC,UAAW,sCAAhB,SAEI,uBAAMC,SAAUF,EAAMG,mBAAtB,UACA,yBAAQF,UAAU,+BAAgCG,KAAK,WAAvD,UACD,wBAAQC,UAAQ,EAACC,MAAQ,SAAzB,oBACA,wBAAQA,MAAQ,SAAhB,oBACC,wBAAQA,MAAQ,YAAhB,uBACA,wBAAQA,MAAQ,MAAhB,iBACA,wBAAQA,MAAQ,UAAhB,qBACA,wBAAQA,MAAQ,OAAhB,kBACA,wBAAQA,MAAQ,UAAhB,qBACA,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,YAAhB,uBACA,wBAAQA,MAAQ,WAAhB,sBACA,wBAAQA,MAAQ,UAAhB,qBACA,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,SAAhB,uBAGI,wBAAQL,UAAU,gBAAlB,mCCbGM,EAXF,SAAAP,GAAK,OAClB,gCAEEA,EAAMQ,MAAQ,4BAAIR,EAAMQ,OAGxBR,EAAMS,OAAS,kCAAKT,EAAMS,aCJtBC,EAAe,CACnBF,UAAMG,EACNF,WAAOE,GA6CMC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAIFT,mBALc,uCAKO,WAAOU,GAAP,mBAAAC,EAAA,6DACnBD,EAAEE,iBACIC,EAAWH,EAAEI,OAAOC,SAASF,SAASV,MAFzB,SAGIa,MAAM,oDAAD,OAAqDH,IAH9D,cAGbI,EAHa,gBAIAA,EAASC,OAJT,OAIbC,EAJa,OAKfN,EACF,EAAKO,SAAS,CACZf,KAAMc,EAAKhB,MACXG,MAAO,KAGT,EAAKc,SAAS,CACZd,MAAO,YAZQ,2CALP,sDAEZ,EAAKe,MAAQd,EAFD,E,qDAuBJ,IAAD,EAEee,KAAKD,MAApBhB,EAFA,EAEAA,KAAMC,EAFN,EAEMA,MAEb,OACE,gCACE,cAAC,EAAD,CACIN,mBAAoBsB,KAAKtB,qBAE3B,cAAC,EAAD,CACEK,KAAMA,EACNC,MAAOA,W,GAnCDiB,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,sBAAKtC,UAAW,+BAAhB,UACA,qBAAKuC,IAAI,gBAAeC,IAAI,8DAA8DxC,UAAY,kCACtG,cAAC,EAAD,SAGFyC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.e8831f03.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n    \r\nconst Button = props => (\r\n    <div className= 'dib br3 pa3 ma2 bw2 shadow-5 center'>\r\n    \r\n        <form onSubmit={props.getRandomChuckJoke}>  \r\n        <select className='w-15 grow f6 fw6 ttu tracked'  name=\"category\">\r\n       <option selected value = 'animal'>animal</option>\r\n       <option value = 'career'>career</option>\r\n        <option value = 'celebrity'>celebrity</option>\r\n        <option value = 'dev'>dev</option>\r\n        <option value = 'fashion'>fashion</option>\r\n        <option value = 'food'>food</option>\r\n        <option value = 'history'>history</option>\r\n        <option value = 'money'>money</option>\r\n        <option value = 'movie'>movie</option>\r\n        <option value = 'music'>music</option>\r\n        <option value = 'political'>political</option>\r\n        <option value = 'religion'>religion</option>\r\n        <option value = 'science'>science</option>\r\n        <option value = 'sport'>sport</option>\r\n        <option value = 'travel'>travel</option>\r\n</select>\r\n\r\n            <button className='w-15 grow mr2'>Get Random Joke</button>\r\n        </form>\r\n    </div>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nconst Joke = props => (\r\n<div>\r\n\t{\r\n\t\tprops.joke && <p>{props.joke}</p>\r\n\t}\r\n\t{\r\n\t\tprops.error && <p> {props.error}</p> \r\n\t}\r\n</div>\r\n)\r\n\r\nexport default Joke;","import React from 'react';\r\nimport Button from './components/Button';\r\nimport Joke from './components/Joke';\r\n\r\nconst initialState = {\r\n  joke: undefined,\r\n  error: undefined\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  getRandomChuckJoke = async (e) => {\r\n    e.preventDefault();\r\n    const category = e.target.elements.category.value;\r\n    const api_call = await fetch(`https://api.chucknorris.io/jokes/random?category=${category}`);\r\n    const data = await api_call.json();\r\n    if (category) {\r\n      this.setState({\r\n        joke: data.value,\r\n        error: ''\r\n      });\r\n    } else {\r\n      this.setState({\r\n        error: 'no joke'\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {joke, error} = this.state;\r\n\r\n    return(\r\n      <div>\r\n        <Button \r\n            getRandomChuckJoke={this.getRandomChuckJoke}\r\n          />\r\n          <Joke \r\n            joke={joke}\r\n            error={error}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div className= ' w-100 w-50-m w-25-l center '>\r\n    <img alt='chuck avatar 'src='https://assets.chucknorris.host/img/avatar/chuck-norris.png' className = 'mw5 mw10-ns center pa3 ph5-ns' />\r\n    <App />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}